{
  "uid" : "919b8c7d04dea4",
  "name" : "test_add[fail]",
  "fullName" : "test_calc_new.TestCalc#test_add",
  "historyId" : "c3b4b0c512ff29882799b7270b3c8f10",
  "time" : {
    "start" : 1614828329271,
    "stop" : 1614828329274,
    "duration" : 3
  },
  "description" : "\n        实例化计算器的类\n        :return:\n        ",
  "descriptionHtml" : "<pre><code>    实例化计算器的类\n    :return:\n</code></pre>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: assert -0.1 == -0.3",
  "statusTrace" : "self = <testing.test_calc_new.TestCalc object at 0x0000000003B5E780>\nget_calc = <python_code.calc.Calculator object at 0x0000000003B38EF0>, get_datas = [0.1, -0.2, -0.3]\n\n    @allure.story(\"测试加法\")\n    @pytest.mark.add\n    def test_add(self,get_calc,get_datas):\n        \"\"\"\n        实例化计算器的类\n        :return:\n        \"\"\"\n        # calc=Calculator()\n        # 调用add方法\n        with allure.step(\"计算两个数的相加和\"):\n            result=get_calc.add(get_datas[0],get_datas[1])\n        # 判断result 是否是浮点数，做出保留小数点后2位的处理\n        with allure.step(\"判断result 是否是浮点数\"):\n            if isinstance(result,float):\n                result=round(result,2)#避免浮点数计算 python底层转换二进制进行计算的错误，需要round函数进行四舍五入\n        # 得到结果之后，需要写断言\n        with allure.step(\"断言计算结果和预期结果\"):\n>           assert result==get_datas[2]\nE           assert -0.1 == -0.3\n\ntest_calc_new.py:57: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "get_datas",
    "time" : {
      "start" : 1614828329269,
      "stop" : 1614828329269,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "get_calc",
    "time" : {
      "start" : 1614828329211,
      "stop" : 1614828329212,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "testStage" : {
    "description" : "\n        实例化计算器的类\n        :return:\n        ",
    "status" : "failed",
    "statusMessage" : "AssertionError: assert -0.1 == -0.3",
    "statusTrace" : "self = <testing.test_calc_new.TestCalc object at 0x0000000003B5E780>\nget_calc = <python_code.calc.Calculator object at 0x0000000003B38EF0>, get_datas = [0.1, -0.2, -0.3]\n\n    @allure.story(\"测试加法\")\n    @pytest.mark.add\n    def test_add(self,get_calc,get_datas):\n        \"\"\"\n        实例化计算器的类\n        :return:\n        \"\"\"\n        # calc=Calculator()\n        # 调用add方法\n        with allure.step(\"计算两个数的相加和\"):\n            result=get_calc.add(get_datas[0],get_datas[1])\n        # 判断result 是否是浮点数，做出保留小数点后2位的处理\n        with allure.step(\"判断result 是否是浮点数\"):\n            if isinstance(result,float):\n                result=round(result,2)#避免浮点数计算 python底层转换二进制进行计算的错误，需要round函数进行四舍五入\n        # 得到结果之后，需要写断言\n        with allure.step(\"断言计算结果和预期结果\"):\n>           assert result==get_datas[2]\nE           assert -0.1 == -0.3\n\ntest_calc_new.py:57: AssertionError",
    "steps" : [ {
      "name" : "计算两个数的相加和",
      "time" : {
        "start" : 1614828329272,
        "stop" : 1614828329272,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : false,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false
    }, {
      "name" : "判断result 是否是浮点数",
      "time" : {
        "start" : 1614828329272,
        "stop" : 1614828329272,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : false,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false
    }, {
      "name" : "断言计算结果和预期结果",
      "time" : {
        "start" : 1614828329272,
        "stop" : 1614828329273,
        "duration" : 1
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: assert -0.1 == -0.3\n",
      "statusTrace" : "  File \"F:\\study\\pytest_shizhan2\\testing\\test_calc_new.py\", line 57, in test_add\n    assert result==get_datas[2]\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : true,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true
    } ],
    "attachments" : [ {
      "uid" : "9beb67cc273006e6",
      "name" : "stdout",
      "source" : "9beb67cc273006e6.txt",
      "type" : "text/plain",
      "size" : 62
    } ],
    "parameters" : [ ],
    "stepsCount" : 3,
    "hasContent" : true,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ {
    "name" : "get_datas::0",
    "time" : {
      "start" : 1614828329330,
      "stop" : 1614828329330,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "测试计算器"
  }, {
    "name" : "story",
    "value" : "测试加法"
  }, {
    "name" : "tag",
    "value" : "add"
  }, {
    "name" : "suite",
    "value" : "test_calc_new"
  }, {
    "name" : "subSuite",
    "value" : "TestCalc"
  }, {
    "name" : "host",
    "value" : "KD4JP1FBJZM3YKK"
  }, {
    "name" : "thread",
    "value" : "7904-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_calc_new"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "get_datas",
    "value" : "[0.1, -0.2, -0.3]"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "add" ]
  },
  "source" : "919b8c7d04dea4.json",
  "parameterValues" : [ "[0.1, -0.2, -0.3]" ]
}