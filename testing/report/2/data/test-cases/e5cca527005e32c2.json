{
  "uid" : "e5cca527005e32c2",
  "name" : "test_add_True[get_add_datas_True3]",
  "fullName" : "test_calc2_homework.TestCalc2#test_add_True",
  "historyId" : "249bbe0cd8d08519187de30e49b54be7",
  "time" : {
    "start" : 1614853636689,
    "stop" : 1614853636691,
    "duration" : 2
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert -0.1 == -0.3",
  "statusTrace" : "self = <testing.test_calc2_homework.TestCalc2 object at 0x0000000003BBE588>\nget_calc = <python_code.calc.Calculator object at 0x0000000003BD7780>, get_add_datas_True = [0.1, -0.2, -0.3]\n\n    @allure.story(\"测试加法_有效测试用例\")\n    @pytest.mark.add\n    @pytest.mark.run(order=1)\n    def test_add_True(self,get_calc,get_add_datas_True):\n        with allure.step(\"计算两个数相加和\"):\n            result=get_calc.add(get_add_datas_True[0],get_add_datas_True[1])\n        with allure.step(\"判断 相加和的数 是否为 float类型 \"):\n            if isinstance(result,float):\n                with allure.step(\"相加和的数 为float类型，result 保留小数点后两位\"):\n                    result=round(result,2)\n        with allure.step(\"断言 计算结果 等于 预期结果\"):\n>           assert result==get_add_datas_True[2]\nE           assert -0.1 == -0.3\n\ntest_calc2_homework.py:148: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "get_calc",
    "time" : {
      "start" : 1614853636617,
      "stop" : 1614853636618,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "get_add_datas_True",
    "time" : {
      "start" : 1614853636687,
      "stop" : 1614853636687,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert -0.1 == -0.3",
    "statusTrace" : "self = <testing.test_calc2_homework.TestCalc2 object at 0x0000000003BBE588>\nget_calc = <python_code.calc.Calculator object at 0x0000000003BD7780>, get_add_datas_True = [0.1, -0.2, -0.3]\n\n    @allure.story(\"测试加法_有效测试用例\")\n    @pytest.mark.add\n    @pytest.mark.run(order=1)\n    def test_add_True(self,get_calc,get_add_datas_True):\n        with allure.step(\"计算两个数相加和\"):\n            result=get_calc.add(get_add_datas_True[0],get_add_datas_True[1])\n        with allure.step(\"判断 相加和的数 是否为 float类型 \"):\n            if isinstance(result,float):\n                with allure.step(\"相加和的数 为float类型，result 保留小数点后两位\"):\n                    result=round(result,2)\n        with allure.step(\"断言 计算结果 等于 预期结果\"):\n>           assert result==get_add_datas_True[2]\nE           assert -0.1 == -0.3\n\ntest_calc2_homework.py:148: AssertionError",
    "steps" : [ {
      "name" : "计算两个数相加和",
      "time" : {
        "start" : 1614853636689,
        "stop" : 1614853636689,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : false,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false
    }, {
      "name" : "判断 相加和的数 是否为 float类型 ",
      "time" : {
        "start" : 1614853636689,
        "stop" : 1614853636690,
        "duration" : 1
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "相加和的数 为float类型，result 保留小数点后两位",
        "time" : {
          "start" : 1614853636690,
          "stop" : 1614853636690,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "hasContent" : false,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 1,
      "hasContent" : true,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false
    }, {
      "name" : "断言 计算结果 等于 预期结果",
      "time" : {
        "start" : 1614853636690,
        "stop" : 1614853636690,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: assert -0.1 == -0.3\n",
      "statusTrace" : "  File \"F:\\study\\pytest_shizhan2\\testing\\test_calc2_homework.py\", line 148, in test_add_True\n    assert result==get_add_datas_True[2]\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : true,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true
    } ],
    "attachments" : [ {
      "uid" : "cec37a8d34e57edc",
      "name" : "stdout",
      "source" : "cec37a8d34e57edc.txt",
      "type" : "text/plain",
      "size" : 92
    } ],
    "parameters" : [ ],
    "stepsCount" : 4,
    "hasContent" : true,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ {
    "name" : "get_calc::0",
    "time" : {
      "start" : 1614853638021,
      "stop" : 1614853638021,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "get_add_datas_True::0",
    "time" : {
      "start" : 1614853636776,
      "stop" : 1614853636776,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "测试计算器:(加减乘除)"
  }, {
    "name" : "story",
    "value" : "测试加法_有效测试用例"
  }, {
    "name" : "tag",
    "value" : "run(order=1)"
  }, {
    "name" : "tag",
    "value" : "add"
  }, {
    "name" : "suite",
    "value" : "test_calc2_homework"
  }, {
    "name" : "subSuite",
    "value" : "TestCalc2"
  }, {
    "name" : "host",
    "value" : "KD4JP1FBJZM3YKK"
  }, {
    "name" : "thread",
    "value" : "6444-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_calc2_homework"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "get_add_datas_True",
    "value" : "[0.1, -0.2, -0.3]"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "add", "run(order=1)" ]
  },
  "source" : "e5cca527005e32c2.json",
  "parameterValues" : [ "[0.1, -0.2, -0.3]" ]
}